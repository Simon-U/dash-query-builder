{
  "src/lib/components/DashQueryBuilder.react.js": {
    "description": "DashQueryBuilder is a Dash Component based on [`react-awesome-query-builder`](https://github.com/ukrbublik/react-awesome-query-builder).\n\nIt takes a `fields` property to generate the options for building the actual query.\nThe optional property `tree` is used to define the current state of the tree. It can be used to\ndefine the starting state of the query builder.\nThe optional property `theme` is one of `material`, `antd` or `basic`. This is the styling of the component.\nThese are the only themes supported by `react-awesome-query-builder`",
    "displayName": "DashQueryBuilder",
    "methods": [
      {
        "name": "getCurrentStateFromTree",
        "docblock": "Takes a tree and config and updates the various Formats used.",
        "modifiers": [],
        "params": [
          {
            "name": "tree"
          },
          {
            "name": "config"
          }
        ],
        "returns": null,
        "description": "Takes a tree and config and updates the various Formats used."
      },
      {
        "name": "onChange",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "immutableTree",
            "type": null
          },
          {
            "name": "config",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "render",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "renderBuilder",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "props",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\nto Dash, to make them available for callbacks."
      },
      "tree": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The tree that describes the state of the query builder.",
        "defaultValue": {
          "value": "loadTree(emptyTree)",
          "computed": true
        }
      },
      "fields": {
        "type": {
          "name": "custom",
          "raw": "fieldPropType.isRequired"
        },
        "required": false,
        "description": "The fields that are used to populate the options for the query builder. This can be a very complicated object.\n See https://github.com/ukrbublik/react-awesome-query-builder/blob/master/CONFIG.adoc#configfields for more info."
      },
      "theme": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'material'",
              "computed": false
            },
            {
              "value": "'antd'",
              "computed": false
            },
            {
              "value": "'basic'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Sets the theme of the query builder.",
        "defaultValue": {
          "value": "'basic'",
          "computed": false
        }
      },
      "sqlFormat": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The SQL Formatted string defined by the current state of the tree"
      },
      "queryStringFormat": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The Query String Formatted string defined by the current state of the tree"
      },
      "queryBuilderStringFormat": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The Query Builder String Formatted string defined by the current state of the tree"
      },
      "mongodbFormat": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The MongoDB Formatted string defined by the current state of the tree"
      },
      "jsonLogicFormat": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The JSON Logic Formatted string defined by the current state of the tree"
      }
    }
  }
}