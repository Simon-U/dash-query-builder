name: Release

on:
  push:
    tags:
      - '*.*.*'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10']
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python-version}}
      - uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.1.12
      - name: Check Version
        id: check-version
        run: |
          [[ "$(poetry version --short)" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]] \
            || echo ::set-output name=prerelease::true
      - name: Cache poetry
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}-python-${{matrix.python-version}}
      - name: Install Dependencies
        run: poetry install
      - name: Build project and publish
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
        run: |
          npm install
          npm run build
          poetry build
          poetry publish
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: steps.check-version.outputs.prerelease == 'true'